#!/bin/bash
# vim: set ft=sh

set -e -x

export GOPATH=$PWD/gopath
export PATH=$PWD/gopath/bin:$PATH

if [ -z "${PLATFORM}" ]; then
  echo "usage: PLATFORM=<platform> $0" >&2
  exit 1
fi

sha="$(git -C concourse rev-parse HEAD)"
archive=concourse-${sha}-${PLATFORM}-amd64.tgz

final_version=""
ldflags=""
if [ -e final-version/version ]; then
  final_version="$(cat final-version/version)"
  ldflags="-X github.com/concourse/concourse.Version=$final_version"
fi

pushd concourse
  go install github.com/gobuffalo/packr/packr
  packr build -o concourse -ldflags "$ldflags" ./cmd/concourse

  if [ -n "$final_version" ]; then
    test "$(./concourse --version)" = "$final_version"
  fi
popd

output=concourse-tarball

mkdir $output/concourse

bin=$output/concourse/bin
mkdir $bin
mv concourse/concourse $bin
[ -d gdn ] && install -m 0755 gdn/gdn* $bin/gdn

[ -d containerd ] && tar -zvxf containerd/containerd-*.linux-amd64.tar.gz -C $bin --strip-components=1
[ -d runc ] && install -m 0755 runc/runc.amd64 $bin/runc
[ -d cni ] && tar -zvxf cni/cni-plugins-linux-amd64-*.tgz -C $bin

if [[ $PLATFORM = *linux* ]]; then
  # build the init executable for containerd
  gcc -O2 -static -o $bin/init concourse/cmd/init/init.c
fi

[ -d resource-types ] && cp -a resource-types $output/concourse

fly_assets=$output/concourse/fly-assets
mkdir $fly_assets
[ -d fly-linux ] && cp -a fly-linux/fly-*.tgz $fly_assets
[ -d fly-windows ] && cp -a fly-windows/fly-*.zip $fly_assets
[ -d fly-darwin ] && cp -a fly-darwin/fly-*.tgz $fly_assets

pushd $output
  tar -czf $archive concourse
  shasum "$archive" > "${archive}.sha1"

  rm -r concourse
popd
